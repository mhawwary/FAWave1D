%======================================================================
% Function for DG Space Discretization scheme of the linear wave equation 
% This function gives you the semi-discrete amplification matrix 
% corressponding to DG scheme with polynomial orders up to 2
% Order of Accuracy is p+1
%======================================================================

function [Asd_DG] = mDG_semi_disc_matrix(Porder,Kwavenumber...
    ,upwind_param, jump_param)

    Beta = zeros(1,5);
    Beta(1:Porder+1) = upwind_param;  % vector of beta's for each moment equation
    Alpha =  zeros(1,5);
    Alpha(1:Porder+1) = jump_param; 
    K = Kwavenumber;
    N= Porder+1;

    Bp1 = 0.5.*(1+Beta);   
    Bm1 = 0.5.*(1-Beta);
    
    C0 = [-Alpha(1)*Beta(1), Alpha(1)-2 , -Alpha(1)*Beta(1).....
        , Alpha(1)-2, -Alpha(1)*Beta(1) ;....
        3*Alpha(2), -3*Alpha(2)*Beta(2), -3*(2-Alpha(2))....
        , -3*Alpha(2)*Beta(2) -3*(2-Alpha(2)) ;.... 
        -5*Alpha(3)*Beta(3), 5*Alpha(3), -5*Alpha(3)*Beta(3)....
        , -5*(2-Alpha(3)), -5*Alpha(3)*Beta(3) ;....
        7*Alpha(4), -7*Alpha(4)*Beta(4), 7*Alpha(4)....
        , -7*Alpha(4)*Beta(4), -7*(2-Alpha(4))  ;....
        -9*Alpha(5)*Beta(5), 9*Alpha(5), -9*Alpha(5)*Beta(5).....
        , 9*Alpha(5), -9*Alpha(5)*Beta(5)  ];      % C0 * Uj
    
         
    Cm1 = [Alpha(1)*Bp1(1), Alpha(1)*Bp1(1), Alpha(1)*Bp1(1).....
        ,Alpha(1)*Bp1(1), Alpha(1)*Bp1(1)  ; .....
        -3*Alpha(2)*Bp1(2),  -3*Alpha(2)*Bp1(2),  -3*Alpha(2)*Bp1(2).....
        ,-3*Alpha(2)*Bp1(2), -3*Alpha(2)*Bp1(2)  ;....
        5*Alpha(3)*Bp1(3),    5*Alpha(3)*Bp1(3),  5*Alpha(3)*Bp1(3).....
        ,5*Alpha(3)*Bp1(3),   5*Alpha(3)*Bp1(3)  ;.... 
        -7*Alpha(4)*Bp1(4),  -7*Alpha(4)*Bp1(4), -7*Alpha(4)*Bp1(4)....
        ,-7*Alpha(4)*Bp1(4), -7*Alpha(4)*Bp1(4)  ;....
        9*Alpha(5)*Bp1(5),    9*Alpha(5)*Bp1(5),  9*Alpha(5)*Bp1(5)....
        ,9*Alpha(5)*Bp1(5),   9*Alpha(5)*Bp1(5) ];        % Cm1 * U_j-1

    Cp1 = [ -Alpha(1)*Bm1(1),  Alpha(1)*Bm1(1),  -Alpha(1)*Bm1(1)....
        ,Alpha(1)*Bm1(1),  -Alpha(1)*Bm1(1)  ;....
        -3*Alpha(2)*Bm1(2),  3*Alpha(2)*Bm1(2),  -3*Alpha(2)*Bm1(2)....
        ,3*Alpha(2)*Bm1(2), -3*Alpha(2)*Bm1(2)  ;....
        -5*Alpha(3)*Bm1(3),  5*Alpha(3)*Bm1(3),  -5*Alpha(3)*Bm1(3)....
        ,5*Alpha(3)*Bm1(3), -5*Alpha(3)*Bm1(3)  ;....
        -7*Alpha(4)*Bm1(4),  7*Alpha(4)*Bm1(4),  -7*Alpha(4)*Bm1(4)....
        ,7*Alpha(4)*Bm1(4), -7*Alpha(4)*Bm1(4)  ;....
        -9*Alpha(5)*Bm1(5),  9*Alpha(5)*Bm1(5),  -9*Alpha(5)*Bm1(5)....
        ,9*Alpha(5)*Bm1(5), -9*Alpha(5)*Bm1(5) ]; % Cp1 * U_j+1

    DG_C0  = C0(1:N,1:N);
    DG_Cm1 = Cm1(1:N,1:N);
    DG_Cp1 = Cp1(1:N,1:N);
    
    Asd_DG =  ( DG_C0 + DG_Cm1 .* exp(-1i.*K) + DG_Cp1 .* exp(1i.*K) );

end